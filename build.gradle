plugins {
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
//    id "org.hibernate.orm" version "latest.release"
    id 'application'
    id 'java'
}

group = 'org.chxei'
version = '0.0.1'

java {
    compileJava {
        options.compilerArgs = List.of('-Xlint:none', '-nowarn', '-parameters')
        options.fork = true
        options.incremental = true
    }
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
        vendor = JvmVendorSpec.matching('Oracle')
    }
}
configurations {
    configureEach {
        resolutionStrategy {
            cacheDynamicVersionsFor 24, 'hours'
            cacheChangingModulesFor 24, 'hours'
        }
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    maven { url 'https://repo.spring.io/release' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    mavenCentral()
    gradlePluginPortal()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //todo dont use both jpa and jdbc
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis' //todo not implemented
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'


    implementation 'org.apache.httpcomponents:httpcore:+'
    implementation 'org.apache.httpcomponents:httpclient:+'
    implementation 'io.github.cdimascio:dotenv-kotlin:+'
    implementation 'com.google.guava:guava:+'
    implementation 'javax.xml.bind:jaxb-api:+'
    implementation 'org.postgresql:postgresql:+'
    implementation 'org.apache.commons:commons-lang3:+'
    implementation 'com.tinify:tinify:latest.release'
    implementation 'jakarta.servlet:jakarta.servlet-api:+'
    implementation 'jakarta.persistence:jakarta.persistence-api:+'
    implementation 'jakarta.validation:jakarta.validation-api:+'

    /*implementation 'joda-time:joda-time-hibernate:+'*/ //todo not implemented
    /*implementation 'joda-time:joda-time:+'*/ //todo not implemented
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'io.jsonwebtoken:jjwt-api:+'
    developmentOnly 'org.springframework.boot:spring-boot-devtools' //not compatible with native
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:+'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:+'
    annotationProcessor 'org.projectlombok:lombok:+'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

test {
    useJUnitPlatform()
}

tasks.register('publish') {
    publish.dependsOn(bootJar)
    publish.doFirst {
        project.mkdir ".github/build"
    }
    publish.doLast {
        file("./build/libs/shmessenger-" + version + ".jar").renameTo(file("./.github/build/shmessenger.jar"))
        delete("./build")
    }
}
